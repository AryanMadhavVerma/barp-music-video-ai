/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/custom_generate/route";
exports.ids = ["app/api/custom_generate/route"];
exports.modules = {

/***/ "(rsc)/./node_modules/http-cookie-agent/dist/utils sync recursive":
/*!*********************************************************!*\
  !*** ./node_modules/http-cookie-agent/dist/utils/ sync ***!
  \*********************************************************/
/***/ ((module) => {

function webpackEmptyContext(req) {
	var e = new Error("Cannot find module '" + req + "'");
	e.code = 'MODULE_NOT_FOUND';
	throw e;
}
webpackEmptyContext.keys = () => ([]);
webpackEmptyContext.resolve = webpackEmptyContext;
webpackEmptyContext.id = "(rsc)/./node_modules/http-cookie-agent/dist/utils sync recursive";
module.exports = webpackEmptyContext;

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("assert");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "module":
/*!*************************!*\
  !*** external "module" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("module");

/***/ }),

/***/ "node:http":
/*!****************************!*\
  !*** external "node:http" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:http");

/***/ }),

/***/ "node:https":
/*!*****************************!*\
  !*** external "node:https" ***!
  \*****************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:https");

/***/ }),

/***/ "node:url":
/*!***************************!*\
  !*** external "node:url" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:url");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "tty":
/*!**********************!*\
  !*** external "tty" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tty");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ "worker_threads":
/*!*********************************!*\
  !*** external "worker_threads" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("worker_threads");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ }),

/***/ "?6ccf":
/*!*************************!*\
  !*** deasync (ignored) ***!
  \*************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fcustom_generate%2Froute&page=%2Fapi%2Fcustom_generate%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcustom_generate%2Froute.ts&appDir=%2FUsers%2Fbikramsutar%2FDesktop%2Fworkspace%2Fhackathon%2Fbackend%2Fservers%2Fsuno-ai-api%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fbikramsutar%2FDesktop%2Fworkspace%2Fhackathon%2Fbackend%2Fservers%2Fsuno-ai-api&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fcustom_generate%2Froute&page=%2Fapi%2Fcustom_generate%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcustom_generate%2Froute.ts&appDir=%2FUsers%2Fbikramsutar%2FDesktop%2Fworkspace%2Fhackathon%2Fbackend%2Fservers%2Fsuno-ai-api%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fbikramsutar%2FDesktop%2Fworkspace%2Fhackathon%2Fbackend%2Fservers%2Fsuno-ai-api&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_bikramsutar_Desktop_workspace_hackathon_backend_servers_suno_ai_api_src_app_api_custom_generate_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/custom_generate/route.ts */ \"(rsc)/./src/app/api/custom_generate/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/custom_generate/route\",\n        pathname: \"/api/custom_generate\",\n        filename: \"route\",\n        bundlePath: \"app/api/custom_generate/route\"\n    },\n    resolvedPagePath: \"/Users/bikramsutar/Desktop/workspace/hackathon/backend/servers/suno-ai-api/src/app/api/custom_generate/route.ts\",\n    nextConfigOutput,\n    userland: _Users_bikramsutar_Desktop_workspace_hackathon_backend_servers_suno_ai_api_src_app_api_custom_generate_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/custom_generate/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZjdXN0b21fZ2VuZXJhdGUlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmN1c3RvbV9nZW5lcmF0ZSUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmN1c3RvbV9nZW5lcmF0ZSUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRmJpa3JhbXN1dGFyJTJGRGVza3RvcCUyRndvcmtzcGFjZSUyRmhhY2thdGhvbiUyRmJhY2tlbmQlMkZzZXJ2ZXJzJTJGc3Vuby1haS1hcGklMkZzcmMlMkZhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPSUyRlVzZXJzJTJGYmlrcmFtc3V0YXIlMkZEZXNrdG9wJTJGd29ya3NwYWNlJTJGaGFja2F0aG9uJTJGYmFja2VuZCUyRnNlcnZlcnMlMkZzdW5vLWFpLWFwaSZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUMrRDtBQUM1STtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLHVHQUF1RztBQUMvRztBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQzZKOztBQUU3SiIsInNvdXJjZXMiOlsid2VicGFjazovL3N1bm8tYXBpLz9iMDgyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi9Vc2Vycy9iaWtyYW1zdXRhci9EZXNrdG9wL3dvcmtzcGFjZS9oYWNrYXRob24vYmFja2VuZC9zZXJ2ZXJzL3N1bm8tYWktYXBpL3NyYy9hcHAvYXBpL2N1c3RvbV9nZW5lcmF0ZS9yb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvY3VzdG9tX2dlbmVyYXRlL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvY3VzdG9tX2dlbmVyYXRlXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9jdXN0b21fZ2VuZXJhdGUvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCIvVXNlcnMvYmlrcmFtc3V0YXIvRGVza3RvcC93b3Jrc3BhY2UvaGFja2F0aG9uL2JhY2tlbmQvc2VydmVycy9zdW5vLWFpLWFwaS9zcmMvYXBwL2FwaS9jdXN0b21fZ2VuZXJhdGUvcm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgaGVhZGVySG9va3MsIHN0YXRpY0dlbmVyYXRpb25CYWlsb3V0IH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvY3VzdG9tX2dlbmVyYXRlL3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIGhlYWRlckhvb2tzLCBzdGF0aWNHZW5lcmF0aW9uQmFpbG91dCwgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fcustom_generate%2Froute&page=%2Fapi%2Fcustom_generate%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcustom_generate%2Froute.ts&appDir=%2FUsers%2Fbikramsutar%2FDesktop%2Fworkspace%2Fhackathon%2Fbackend%2Fservers%2Fsuno-ai-api%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fbikramsutar%2FDesktop%2Fworkspace%2Fhackathon%2Fbackend%2Fservers%2Fsuno-ai-api&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/custom_generate/route.ts":
/*!**********************************************!*\
  !*** ./src/app/api/custom_generate/route.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OPTIONS: () => (/* binding */ OPTIONS),\n/* harmony export */   POST: () => (/* binding */ POST),\n/* harmony export */   dynamic: () => (/* binding */ dynamic),\n/* harmony export */   maxDuration: () => (/* binding */ maxDuration)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_SunoApi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/SunoApi */ \"(rsc)/./src/lib/SunoApi.ts\");\n/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/utils */ \"(rsc)/./src/lib/utils.ts\");\n\n\n\nconst maxDuration = 60; // allow longer timeout for wait_audio == true\nconst dynamic = \"force-dynamic\";\nasync function POST(req) {\n    if (req.method === \"POST\") {\n        try {\n            const body = await req.json();\n            const { prompt, tags, title, make_instrumental, wait_audio } = body;\n            if (!prompt || !tags || !title) {\n                return new next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse(JSON.stringify({\n                    error: \"Prompt, tags, and title are required\"\n                }), {\n                    status: 400,\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        ..._lib_utils__WEBPACK_IMPORTED_MODULE_2__.corsHeaders\n                    }\n                });\n            }\n            const audioInfo = await (await _lib_SunoApi__WEBPACK_IMPORTED_MODULE_1__.sunoApi).custom_generate(prompt, tags, title, make_instrumental == true, wait_audio == true);\n            return new next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse(JSON.stringify(audioInfo), {\n                status: 200,\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    ..._lib_utils__WEBPACK_IMPORTED_MODULE_2__.corsHeaders\n                }\n            });\n        } catch (error) {\n            console.error(\"Error generating custom audio:\", error.response.data);\n            if (error.response.status === 402) {\n                return new next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse(JSON.stringify({\n                    error: error.response.data.detail\n                }), {\n                    status: 402,\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        ..._lib_utils__WEBPACK_IMPORTED_MODULE_2__.corsHeaders\n                    }\n                });\n            }\n            return new next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse(JSON.stringify({\n                error: \"Internal server error\"\n            }), {\n                status: 500,\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    ..._lib_utils__WEBPACK_IMPORTED_MODULE_2__.corsHeaders\n                }\n            });\n        }\n    } else {\n        return new next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse(\"Method Not Allowed\", {\n            headers: {\n                Allow: \"POST\",\n                ..._lib_utils__WEBPACK_IMPORTED_MODULE_2__.corsHeaders\n            },\n            status: 405\n        });\n    }\n}\nasync function OPTIONS(request) {\n    return new Response(null, {\n        status: 200,\n        headers: _lib_utils__WEBPACK_IMPORTED_MODULE_2__.corsHeaders\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2FwaS9jdXN0b21fZ2VuZXJhdGUvcm91dGUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUF3RDtBQUNoQjtBQUNFO0FBRW5DLE1BQU1HLGNBQWMsR0FBRyxDQUFDLDhDQUE4QztBQUN0RSxNQUFNQyxVQUFVLGdCQUFnQjtBQUVoQyxlQUFlQyxLQUFLQyxHQUFnQjtJQUN6QyxJQUFJQSxJQUFJQyxNQUFNLEtBQUssUUFBUTtRQUN6QixJQUFJO1lBQ0YsTUFBTUMsT0FBTyxNQUFNRixJQUFJRyxJQUFJO1lBQzNCLE1BQU0sRUFBRUMsTUFBTSxFQUFFQyxJQUFJLEVBQUVDLEtBQUssRUFBRUMsaUJBQWlCLEVBQUVDLFVBQVUsRUFBRSxHQUFHTjtZQUMvRCxJQUFJLENBQUNFLFVBQVUsQ0FBQ0MsUUFBUSxDQUFDQyxPQUFPO2dCQUM5QixPQUFPLElBQUlaLHFEQUFZQSxDQUFDZSxLQUFLQyxTQUFTLENBQUM7b0JBQUVDLE9BQU87Z0JBQXVDLElBQUk7b0JBQ3pGQyxRQUFRO29CQUNSQyxTQUFTO3dCQUNQLGdCQUFnQjt3QkFDaEIsR0FBR2pCLG1EQUFXO29CQUNoQjtnQkFDRjtZQUNGO1lBQ0EsTUFBTWtCLFlBQVksTUFBTSxDQUFDLE1BQU1uQixpREFBTSxFQUFHb0IsZUFBZSxDQUNyRFgsUUFBUUMsTUFBTUMsT0FDZEMscUJBQXFCLE1BQ3JCQyxjQUFjO1lBRWhCLE9BQU8sSUFBSWQscURBQVlBLENBQUNlLEtBQUtDLFNBQVMsQ0FBQ0ksWUFBWTtnQkFDakRGLFFBQVE7Z0JBQ1JDLFNBQVM7b0JBQ1AsZ0JBQWdCO29CQUNoQixHQUFHakIsbURBQVc7Z0JBQ2hCO1lBQ0Y7UUFDRixFQUFFLE9BQU9lLE9BQVk7WUFDbkJLLFFBQVFMLEtBQUssQ0FBQyxrQ0FBa0NBLE1BQU1NLFFBQVEsQ0FBQ0MsSUFBSTtZQUNuRSxJQUFJUCxNQUFNTSxRQUFRLENBQUNMLE1BQU0sS0FBSyxLQUFLO2dCQUNqQyxPQUFPLElBQUlsQixxREFBWUEsQ0FBQ2UsS0FBS0MsU0FBUyxDQUFDO29CQUFFQyxPQUFPQSxNQUFNTSxRQUFRLENBQUNDLElBQUksQ0FBQ0MsTUFBTTtnQkFBQyxJQUFJO29CQUM3RVAsUUFBUTtvQkFDUkMsU0FBUzt3QkFDUCxnQkFBZ0I7d0JBQ2hCLEdBQUdqQixtREFBVztvQkFDaEI7Z0JBQ0Y7WUFDRjtZQUNBLE9BQU8sSUFBSUYscURBQVlBLENBQUNlLEtBQUtDLFNBQVMsQ0FBQztnQkFBRUMsT0FBTztZQUF3QixJQUFJO2dCQUMxRUMsUUFBUTtnQkFDUkMsU0FBUztvQkFDUCxnQkFBZ0I7b0JBQ2hCLEdBQUdqQixtREFBVztnQkFDaEI7WUFDRjtRQUNGO0lBQ0YsT0FBTztRQUNMLE9BQU8sSUFBSUYscURBQVlBLENBQUMsc0JBQXNCO1lBQzVDbUIsU0FBUztnQkFDUE8sT0FBTztnQkFDUCxHQUFHeEIsbURBQVc7WUFDaEI7WUFDQWdCLFFBQVE7UUFDVjtJQUNGO0FBQ0Y7QUFFTyxlQUFlUyxRQUFRQyxPQUFnQjtJQUM1QyxPQUFPLElBQUlDLFNBQVMsTUFBTTtRQUN4QlgsUUFBUTtRQUNSQyxTQUFTakIsbURBQVdBO0lBQ3RCO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdW5vLWFwaS8uL3NyYy9hcHAvYXBpL2N1c3RvbV9nZW5lcmF0ZS9yb3V0ZS50cz80NmVlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRSZXNwb25zZSwgTmV4dFJlcXVlc3QgfSBmcm9tIFwibmV4dC9zZXJ2ZXJcIjtcbmltcG9ydCB7IHN1bm9BcGkgfSBmcm9tIFwiQC9saWIvU3Vub0FwaVwiO1xuaW1wb3J0IHsgY29yc0hlYWRlcnMgfSBmcm9tIFwiQC9saWIvdXRpbHNcIjtcblxuZXhwb3J0IGNvbnN0IG1heER1cmF0aW9uID0gNjA7IC8vIGFsbG93IGxvbmdlciB0aW1lb3V0IGZvciB3YWl0X2F1ZGlvID09IHRydWVcbmV4cG9ydCBjb25zdCBkeW5hbWljID0gXCJmb3JjZS1keW5hbWljXCI7XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBQT1NUKHJlcTogTmV4dFJlcXVlc3QpIHtcbiAgaWYgKHJlcS5tZXRob2QgPT09ICdQT1NUJykge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBib2R5ID0gYXdhaXQgcmVxLmpzb24oKTtcbiAgICAgIGNvbnN0IHsgcHJvbXB0LCB0YWdzLCB0aXRsZSwgbWFrZV9pbnN0cnVtZW50YWwsIHdhaXRfYXVkaW8gfSA9IGJvZHk7XG4gICAgICBpZiAoIXByb21wdCB8fCAhdGFncyB8fCAhdGl0bGUpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBOZXh0UmVzcG9uc2UoSlNPTi5zdHJpbmdpZnkoeyBlcnJvcjogJ1Byb21wdCwgdGFncywgYW5kIHRpdGxlIGFyZSByZXF1aXJlZCcgfSksIHtcbiAgICAgICAgICBzdGF0dXM6IDQwMCxcbiAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICAgICAgLi4uY29yc0hlYWRlcnNcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgICAgY29uc3QgYXVkaW9JbmZvID0gYXdhaXQgKGF3YWl0IHN1bm9BcGkpLmN1c3RvbV9nZW5lcmF0ZShcbiAgICAgICAgcHJvbXB0LCB0YWdzLCB0aXRsZSxcbiAgICAgICAgbWFrZV9pbnN0cnVtZW50YWwgPT0gdHJ1ZSxcbiAgICAgICAgd2FpdF9hdWRpbyA9PSB0cnVlXG4gICAgICApO1xuICAgICAgcmV0dXJuIG5ldyBOZXh0UmVzcG9uc2UoSlNPTi5zdHJpbmdpZnkoYXVkaW9JbmZvKSwge1xuICAgICAgICBzdGF0dXM6IDIwMCxcbiAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXG4gICAgICAgICAgLi4uY29yc0hlYWRlcnNcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSBjYXRjaCAoZXJyb3I6IGFueSkge1xuICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgZ2VuZXJhdGluZyBjdXN0b20gYXVkaW86JywgZXJyb3IucmVzcG9uc2UuZGF0YSk7XG4gICAgICBpZiAoZXJyb3IucmVzcG9uc2Uuc3RhdHVzID09PSA0MDIpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBOZXh0UmVzcG9uc2UoSlNPTi5zdHJpbmdpZnkoeyBlcnJvcjogZXJyb3IucmVzcG9uc2UuZGF0YS5kZXRhaWwgfSksIHtcbiAgICAgICAgICBzdGF0dXM6IDQwMixcbiAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICAgICAgLi4uY29yc0hlYWRlcnNcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgICAgcmV0dXJuIG5ldyBOZXh0UmVzcG9uc2UoSlNPTi5zdHJpbmdpZnkoeyBlcnJvcjogJ0ludGVybmFsIHNlcnZlciBlcnJvcicgfSksIHtcbiAgICAgICAgc3RhdHVzOiA1MDAsXG4gICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICAgIC4uLmNvcnNIZWFkZXJzXG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gbmV3IE5leHRSZXNwb25zZSgnTWV0aG9kIE5vdCBBbGxvd2VkJywge1xuICAgICAgaGVhZGVyczoge1xuICAgICAgICBBbGxvdzogJ1BPU1QnLFxuICAgICAgICAuLi5jb3JzSGVhZGVyc1xuICAgICAgfSxcbiAgICAgIHN0YXR1czogNDA1XG4gICAgfSk7XG4gIH1cbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIE9QVElPTlMocmVxdWVzdDogUmVxdWVzdCkge1xuICByZXR1cm4gbmV3IFJlc3BvbnNlKG51bGwsIHtcbiAgICBzdGF0dXM6IDIwMCxcbiAgICBoZWFkZXJzOiBjb3JzSGVhZGVyc1xuICB9KTtcbn1cbiJdLCJuYW1lcyI6WyJOZXh0UmVzcG9uc2UiLCJzdW5vQXBpIiwiY29yc0hlYWRlcnMiLCJtYXhEdXJhdGlvbiIsImR5bmFtaWMiLCJQT1NUIiwicmVxIiwibWV0aG9kIiwiYm9keSIsImpzb24iLCJwcm9tcHQiLCJ0YWdzIiwidGl0bGUiLCJtYWtlX2luc3RydW1lbnRhbCIsIndhaXRfYXVkaW8iLCJKU09OIiwic3RyaW5naWZ5IiwiZXJyb3IiLCJzdGF0dXMiLCJoZWFkZXJzIiwiYXVkaW9JbmZvIiwiY3VzdG9tX2dlbmVyYXRlIiwiY29uc29sZSIsInJlc3BvbnNlIiwiZGF0YSIsImRldGFpbCIsIkFsbG93IiwiT1BUSU9OUyIsInJlcXVlc3QiLCJSZXNwb25zZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/custom_generate/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/SunoApi.ts":
/*!****************************!*\
  !*** ./src/lib/SunoApi.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sunoApi: () => (/* binding */ sunoApi)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! axios */ \"(rsc)/./node_modules/axios/lib/axios.js\");\n/* harmony import */ var user_agents__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! user-agents */ \"(rsc)/./node_modules/user-agents/dist/index.js\");\n/* harmony import */ var user_agents__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(user_agents__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var pino__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! pino */ \"(rsc)/./node_modules/pino/pino.js\");\n/* harmony import */ var pino__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(pino__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var axios_cookiejar_support__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! axios-cookiejar-support */ \"(rsc)/./node_modules/axios-cookiejar-support/dist/index.js\");\n/* harmony import */ var tough_cookie__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tough-cookie */ \"(rsc)/./node_modules/tough-cookie/lib/cookie.js\");\n/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/lib/utils */ \"(rsc)/./src/lib/utils.ts\");\n\n\n\n\n\n\nconst logger = pino__WEBPACK_IMPORTED_MODULE_1___default()();\nclass SunoApi {\n    static{\n        this.BASE_URL = \"https://studio-api.suno.ai\";\n    }\n    static{\n        this.CLERK_BASE_URL = \"https://clerk.suno.com\";\n    }\n    constructor(cookie){\n        const cookieJar = new tough_cookie__WEBPACK_IMPORTED_MODULE_3__.CookieJar();\n        const randomUserAgent = new (user_agents__WEBPACK_IMPORTED_MODULE_0___default())(/Chrome/).random().toString();\n        this.client = (0,axios_cookiejar_support__WEBPACK_IMPORTED_MODULE_2__.wrapper)(axios__WEBPACK_IMPORTED_MODULE_5__[\"default\"].create({\n            jar: cookieJar,\n            withCredentials: true,\n            headers: {\n                \"User-Agent\": randomUserAgent,\n                \"Cookie\": cookie\n            }\n        }));\n        this.client.interceptors.request.use((config)=>{\n            if (this.currentToken) {\n                config.headers[\"Authorization\"] = `Bearer ${this.currentToken}`;\n            }\n            return config;\n        });\n    }\n    async init() {\n        await this.getAuthToken();\n        await this.keepAlive();\n        return this;\n    }\n    /**\n   * Get the session ID and save it for later use.\n   */ async getAuthToken() {\n        // URL to get session ID\n        const getSessionUrl = `${SunoApi.CLERK_BASE_URL}/v1/client?_clerk_js_version=4.73.2`;\n        // Get session ID\n        const sessionResponse = await this.client.get(getSessionUrl);\n        if (!sessionResponse?.data?.response?.[\"last_active_session_id\"]) {\n            throw new Error(\"Failed to get session id, you may need to update the SUNO_COOKIE\");\n        }\n        // Save session ID for later use\n        this.sid = sessionResponse.data.response[\"last_active_session_id\"];\n    }\n    /**\n   * Keep the session alive.\n   * @param isWait Indicates if the method should wait for the session to be fully renewed before returning.\n   */ async keepAlive(isWait) {\n        if (!this.sid) {\n            throw new Error(\"Session ID is not set. Cannot renew token.\");\n        }\n        // URL to renew session token\n        const renewUrl = `${SunoApi.CLERK_BASE_URL}/v1/client/sessions/${this.sid}/tokens?_clerk_js_version==4.73.2`;\n        // Renew session token\n        const renewResponse = await this.client.post(renewUrl);\n        logger.info(\"KeepAlive...\\n\");\n        if (isWait) {\n            await (0,_lib_utils__WEBPACK_IMPORTED_MODULE_4__.sleep)(1, 2);\n        }\n        const newToken = renewResponse.data[\"jwt\"];\n        console.log(\"newToken:===\\n\\n\", newToken);\n        // Update Authorization field in request header with the new JWT token\n        this.currentToken = newToken;\n    }\n    /**\n   * Generate a song based on the prompt.\n   * @param prompt The text prompt to generate audio from.\n   * @param make_instrumental Indicates if the generated audio should be instrumental.\n   * @param wait_audio Indicates if the method should wait for the audio file to be fully generated before returning.\n   * @returns \n   */ async generate(prompt, make_instrumental = false, wait_audio = false) {\n        await this.keepAlive(false);\n        const startTime = Date.now();\n        const audios = this.generateSongs(prompt, false, undefined, undefined, make_instrumental, wait_audio);\n        const costTime = Date.now() - startTime;\n        logger.info(\"Generate Response:\\n\" + JSON.stringify(audios, null, 2));\n        logger.info(\"Cost time: \" + costTime);\n        return audios;\n    }\n    /**\n   * Calls the concatenate endpoint for a clip to generate the whole song.\n   * @param clip_id The ID of the audio clip to concatenate.\n   * @returns A promise that resolves to an AudioInfo object representing the concatenated audio.\n   * @throws Error if the response status is not 200.\n   */ async concatenate(clip_id) {\n        await this.keepAlive(false);\n        const payload = {\n            clip_id: clip_id\n        };\n        const response = await this.client.post(`${SunoApi.BASE_URL}/api/generate/concat/v2/`, payload, {\n            timeout: 10000\n        });\n        if (response.status !== 200) {\n            throw new Error(\"Error response:\" + response.statusText);\n        }\n        return response.data;\n    }\n    /**\n   * Generates custom audio based on provided parameters.\n   *\n   * @param prompt The text prompt to generate audio from.\n   * @param tags Tags to categorize the generated audio.\n   * @param title The title for the generated audio.\n   * @param make_instrumental Indicates if the generated audio should be instrumental.\n   * @param wait_audio Indicates if the method should wait for the audio file to be fully generated before returning.\n   * @returns A promise that resolves to an array of AudioInfo objects representing the generated audios.\n   */ async custom_generate(prompt, tags, title, make_instrumental = false, wait_audio = false) {\n        const startTime = Date.now();\n        const audios = await this.generateSongs(prompt, true, tags, title, make_instrumental, wait_audio);\n        const costTime = Date.now() - startTime;\n        logger.info(\"Custom Generate Response:\\n\" + JSON.stringify(audios, null, 2));\n        logger.info(\"Cost time: \" + costTime);\n        return audios;\n    }\n    /**\n   * Generates songs based on the provided parameters.\n   *\n   * @param prompt The text prompt to generate songs from.\n   * @param isCustom Indicates if the generation should consider custom parameters like tags and title.\n   * @param tags Optional tags to categorize the song, used only if isCustom is true.\n   * @param title Optional title for the song, used only if isCustom is true.\n   * @param make_instrumental Indicates if the generated song should be instrumental.\n   * @param wait_audio Indicates if the method should wait for the audio file to be fully generated before returning.\n   * @returns A promise that resolves to an array of AudioInfo objects representing the generated songs.\n   */ async generateSongs(prompt, isCustom, tags, title, make_instrumental, wait_audio = false) {\n        await this.keepAlive(false);\n        const payload = {\n            make_instrumental: make_instrumental == true,\n            mv: \"chirp-v3-5\",\n            prompt: \"\"\n        };\n        if (isCustom) {\n            payload.tags = tags;\n            payload.title = title;\n            payload.prompt = prompt;\n        } else {\n            payload.gpt_description_prompt = prompt;\n        }\n        logger.info(\"generateSongs payload:\\n\" + JSON.stringify({\n            prompt: prompt,\n            isCustom: isCustom,\n            tags: tags,\n            title: title,\n            make_instrumental: make_instrumental,\n            wait_audio: wait_audio,\n            payload: payload\n        }, null, 2));\n        const response = await this.client.post(`${SunoApi.BASE_URL}/api/generate/v2/`, payload, {\n            timeout: 10000\n        });\n        logger.info(\"generateSongs Response:\\n\" + JSON.stringify(response.data, null, 2));\n        if (response.status !== 200) {\n            throw new Error(\"Error response:\" + response.statusText);\n        }\n        const songIds = response.data[\"clips\"].map((audio)=>audio.id);\n        //Want to wait for music file generation\n        if (wait_audio) {\n            const startTime = Date.now();\n            let lastResponse = [];\n            await (0,_lib_utils__WEBPACK_IMPORTED_MODULE_4__.sleep)(5, 5);\n            while(Date.now() - startTime < 100000){\n                const response = await this.get(songIds);\n                const allCompleted = response.every((audio)=>audio.status === \"streaming\" || audio.status === \"complete\");\n                if (allCompleted) {\n                    return response;\n                }\n                lastResponse = response;\n                await (0,_lib_utils__WEBPACK_IMPORTED_MODULE_4__.sleep)(3, 6);\n                await this.keepAlive(true);\n            }\n            return lastResponse;\n        } else {\n            await this.keepAlive(true);\n            return response.data[\"clips\"].map((audio)=>({\n                    id: audio.id,\n                    title: audio.title,\n                    image_url: audio.image_url,\n                    lyric: audio.metadata.prompt,\n                    audio_url: audio.audio_url,\n                    video_url: audio.video_url,\n                    created_at: audio.created_at,\n                    model_name: audio.model_name,\n                    status: audio.status,\n                    gpt_description_prompt: audio.metadata.gpt_description_prompt,\n                    prompt: audio.metadata.prompt,\n                    type: audio.metadata.type,\n                    tags: audio.metadata.tags,\n                    duration: audio.metadata.duration_formatted\n                }));\n        }\n    }\n    /**\n   * Generates lyrics based on a given prompt.\n   * @param prompt The prompt for generating lyrics.\n   * @returns The generated lyrics text.\n   */ async generateLyrics(prompt) {\n        await this.keepAlive(false);\n        // Initiate lyrics generation\n        const generateResponse = await this.client.post(`${SunoApi.BASE_URL}/api/generate/lyrics/`, {\n            prompt\n        });\n        const generateId = generateResponse.data.id;\n        // Poll for lyrics completion\n        let lyricsResponse = await this.client.get(`${SunoApi.BASE_URL}/api/generate/lyrics/${generateId}`);\n        while(lyricsResponse?.data?.status !== \"complete\"){\n            await (0,_lib_utils__WEBPACK_IMPORTED_MODULE_4__.sleep)(2); // Wait for 2 seconds before polling again\n            lyricsResponse = await this.client.get(`${SunoApi.BASE_URL}/api/generate/lyrics/${generateId}`);\n        }\n        // Return the generated lyrics text\n        return lyricsResponse.data;\n    }\n    /**\n   * Extends an existing audio clip by generating additional content based on the provided prompt.\n   * \n   * @param audioId The ID of the audio clip to extend.\n   * @param prompt The prompt for generating additional content.\n   * @param continueAt Extend a new clip from a song at mm:ss(e.g. 00:30). Default extends from the end of the song.\n   * @param tags Style of Music.\n   * @param title Title of the song.\n   * @returns A promise that resolves to an AudioInfo object representing the extended audio clip.\n   */ async extendAudio(audioId, prompt = \"\", continueAt = \"0\", tags = \"\", title = \"\") {\n        const response = await this.client.post(`${SunoApi.BASE_URL}/api/generate/v2/`, {\n            continue_clip_id: audioId,\n            continue_at: continueAt,\n            mv: \"chirp-v3-0\",\n            prompt: prompt,\n            tags: tags,\n            title: \"\"\n        });\n        return response.data;\n    }\n    /**\n   * Processes the lyrics (prompt) from the audio metadata into a more readable format.\n   * @param prompt The original lyrics text.\n   * @returns The processed lyrics text.\n   */ parseLyrics(prompt) {\n        // Assuming the original lyrics are separated by a specific delimiter (e.g., newline), we can convert it into a more readable format.\n        // The implementation here can be adjusted according to the actual lyrics format.\n        // For example, if the lyrics exist as continuous text, it might be necessary to split them based on specific markers (such as periods, commas, etc.).\n        // The following implementation assumes that the lyrics are already separated by newlines.\n        // Split the lyrics using newline and ensure to remove empty lines.\n        const lines = prompt.split(\"\\n\").filter((line)=>line.trim() !== \"\");\n        // Reassemble the processed lyrics lines into a single string, separated by newlines between each line.\n        // Additional formatting logic can be added here, such as adding specific markers or handling special lines.\n        return lines.join(\"\\n\");\n    }\n    /**\n   * Retrieves audio information for the given song IDs.\n   * @param songIds An optional array of song IDs to retrieve information for.\n   * @returns A promise that resolves to an array of AudioInfo objects.\n   */ async get(songIds) {\n        await this.keepAlive(false);\n        let url = `${SunoApi.BASE_URL}/api/feed/`;\n        if (songIds) {\n            url = `${url}?ids=${songIds.join(\",\")}`;\n        }\n        logger.info(\"Get audio status: \" + url);\n        const response = await this.client.get(url, {\n            // 3 seconds timeout\n            timeout: 3000\n        });\n        const audios = response.data;\n        return audios.map((audio)=>({\n                id: audio.id,\n                title: audio.title,\n                image_url: audio.image_url,\n                lyric: audio.metadata.prompt ? this.parseLyrics(audio.metadata.prompt) : \"\",\n                audio_url: audio.audio_url,\n                video_url: audio.video_url,\n                created_at: audio.created_at,\n                model_name: audio.model_name,\n                status: audio.status,\n                gpt_description_prompt: audio.metadata.gpt_description_prompt,\n                prompt: audio.metadata.prompt,\n                type: audio.metadata.type,\n                tags: audio.metadata.tags,\n                duration: audio.metadata.duration_formatted\n            }));\n    }\n    /**\n   * Retrieves information for a specific audio clip.\n   * @param clipId The ID of the audio clip to retrieve information for.\n   * @returns A promise that resolves to an object containing the audio clip information.\n   */ async getClip(clipId) {\n        await this.keepAlive(false);\n        const response = await this.client.get(`${SunoApi.BASE_URL}/api/clip/${clipId}`);\n        return response.data;\n    }\n    async get_credits() {\n        await this.keepAlive(false);\n        const response = await this.client.get(`${SunoApi.BASE_URL}/api/billing/info/`);\n        return {\n            credits_left: response.data.total_credits_left,\n            period: response.data.period,\n            monthly_limit: response.data.monthly_limit,\n            monthly_usage: response.data.monthly_usage\n        };\n    }\n}\nconst newSunoApi = async (cookie)=>{\n    const sunoApi = new SunoApi(cookie);\n    return await sunoApi.init();\n};\nif (!process.env.SUNO_COOKIE) {\n    console.log(\"Environment does not contain SUNO_COOKIE.\", process.env);\n}\nconst sunoApi = newSunoApi(process.env.SUNO_COOKIE || \"\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/SunoApi.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/utils.ts":
/*!**************************!*\
  !*** ./src/lib/utils.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   corsHeaders: () => (/* binding */ corsHeaders),\n/* harmony export */   sleep: () => (/* binding */ sleep)\n/* harmony export */ });\n/* harmony import */ var pino__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! pino */ \"(rsc)/./node_modules/pino/pino.js\");\n/* harmony import */ var pino__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(pino__WEBPACK_IMPORTED_MODULE_0__);\n\nconst logger = pino__WEBPACK_IMPORTED_MODULE_0___default()();\n/**\n * Pause for a specified number of seconds.\n * @param x Minimum number of seconds.\n * @param y Maximum number of seconds (optional).\n */ const sleep = (x, y)=>{\n    let timeout = x * 1000;\n    if (y !== undefined && y !== x) {\n        const min = Math.min(x, y);\n        const max = Math.max(x, y);\n        timeout = Math.floor(Math.random() * (max - min + 1) + min) * 1000;\n    }\n    // console.log(`Sleeping for ${timeout / 1000} seconds`);\n    logger.info(`Sleeping for ${timeout / 1000} seconds`);\n    return new Promise((resolve)=>setTimeout(resolve, timeout));\n};\nconst corsHeaders = {\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Access-Control-Allow-Methods\": \"GET, POST, PUT, DELETE, OPTIONS\",\n    \"Access-Control-Allow-Headers\": \"Content-Type, Authorization\"\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL3V0aWxzLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBd0I7QUFFeEIsTUFBTUMsU0FBU0QsMkNBQUlBO0FBRW5COzs7O0NBSUMsR0FDTSxNQUFNRSxRQUFRLENBQUNDLEdBQVdDO0lBQy9CLElBQUlDLFVBQVVGLElBQUk7SUFDbEIsSUFBSUMsTUFBTUUsYUFBYUYsTUFBTUQsR0FBRztRQUM5QixNQUFNSSxNQUFNQyxLQUFLRCxHQUFHLENBQUNKLEdBQUdDO1FBQ3hCLE1BQU1LLE1BQU1ELEtBQUtDLEdBQUcsQ0FBQ04sR0FBR0M7UUFDeEJDLFVBQVVHLEtBQUtFLEtBQUssQ0FBQ0YsS0FBS0csTUFBTSxLQUFNRixDQUFBQSxNQUFNRixNQUFNLEtBQUtBLE9BQU87SUFDaEU7SUFDQSx5REFBeUQ7SUFDekROLE9BQU9XLElBQUksQ0FBQyxDQUFDLGFBQWEsRUFBRVAsVUFBVSxLQUFLLFFBQVEsQ0FBQztJQUVwRCxPQUFPLElBQUlRLFFBQVFDLENBQUFBLFVBQVdDLFdBQVdELFNBQVNUO0FBQ3BELEVBQUM7QUFHTSxNQUFNVyxjQUFjO0lBQ3pCLCtCQUErQjtJQUMvQixnQ0FBZ0M7SUFDaEMsZ0NBQWdDO0FBQ2xDLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdW5vLWFwaS8uL3NyYy9saWIvdXRpbHMudHM/N2MxYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgcGlubyBmcm9tIFwicGlub1wiO1xuXG5jb25zdCBsb2dnZXIgPSBwaW5vKCk7XG5cbi8qKlxuICogUGF1c2UgZm9yIGEgc3BlY2lmaWVkIG51bWJlciBvZiBzZWNvbmRzLlxuICogQHBhcmFtIHggTWluaW11bSBudW1iZXIgb2Ygc2Vjb25kcy5cbiAqIEBwYXJhbSB5IE1heGltdW0gbnVtYmVyIG9mIHNlY29uZHMgKG9wdGlvbmFsKS5cbiAqL1xuZXhwb3J0IGNvbnN0IHNsZWVwID0gKHg6IG51bWJlciwgeT86IG51bWJlcik6IFByb21pc2U8dm9pZD4gPT4ge1xuICBsZXQgdGltZW91dCA9IHggKiAxMDAwO1xuICBpZiAoeSAhPT0gdW5kZWZpbmVkICYmIHkgIT09IHgpIHtcbiAgICBjb25zdCBtaW4gPSBNYXRoLm1pbih4LCB5KTtcbiAgICBjb25zdCBtYXggPSBNYXRoLm1heCh4LCB5KTtcbiAgICB0aW1lb3V0ID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKG1heCAtIG1pbiArIDEpICsgbWluKSAqIDEwMDA7XG4gIH1cbiAgLy8gY29uc29sZS5sb2coYFNsZWVwaW5nIGZvciAke3RpbWVvdXQgLyAxMDAwfSBzZWNvbmRzYCk7XG4gIGxvZ2dlci5pbmZvKGBTbGVlcGluZyBmb3IgJHt0aW1lb3V0IC8gMTAwMH0gc2Vjb25kc2ApO1xuXG4gIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgdGltZW91dCkpO1xufVxuXG5cbmV4cG9ydCBjb25zdCBjb3JzSGVhZGVycyA9IHtcbiAgJ0FjY2Vzcy1Db250cm9sLUFsbG93LU9yaWdpbic6ICcqJyxcbiAgJ0FjY2Vzcy1Db250cm9sLUFsbG93LU1ldGhvZHMnOiAnR0VULCBQT1NULCBQVVQsIERFTEVURSwgT1BUSU9OUycsXG4gICdBY2Nlc3MtQ29udHJvbC1BbGxvdy1IZWFkZXJzJzogJ0NvbnRlbnQtVHlwZSwgQXV0aG9yaXphdGlvbicsXG59Il0sIm5hbWVzIjpbInBpbm8iLCJsb2dnZXIiLCJzbGVlcCIsIngiLCJ5IiwidGltZW91dCIsInVuZGVmaW5lZCIsIm1pbiIsIk1hdGgiLCJtYXgiLCJmbG9vciIsInJhbmRvbSIsImluZm8iLCJQcm9taXNlIiwicmVzb2x2ZSIsInNldFRpbWVvdXQiLCJjb3JzSGVhZGVycyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/utils.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/axios","vendor-chunks/next","vendor-chunks/pino","vendor-chunks/asynckit","vendor-chunks/tough-cookie","vendor-chunks/http-cookie-agent","vendor-chunks/fast-redact","vendor-chunks/pino-std-serializers","vendor-chunks/thread-stream","vendor-chunks/debug","vendor-chunks/psl","vendor-chunks/mime-db","vendor-chunks/form-data","vendor-chunks/follow-redirects","vendor-chunks/agent-base","vendor-chunks/sonic-boom","vendor-chunks/user-agents","vendor-chunks/url-parse","vendor-chunks/universalify","vendor-chunks/supports-color","vendor-chunks/safe-stable-stringify","vendor-chunks/requires-port","vendor-chunks/quick-format-unescaped","vendor-chunks/querystringify","vendor-chunks/punycode","vendor-chunks/proxy-from-env","vendor-chunks/on-exit-leak-free","vendor-chunks/ms","vendor-chunks/mime-types","vendor-chunks/has-flag","vendor-chunks/delayed-stream","vendor-chunks/combined-stream","vendor-chunks/axios-cookiejar-support","vendor-chunks/atomic-sleep"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fcustom_generate%2Froute&page=%2Fapi%2Fcustom_generate%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcustom_generate%2Froute.ts&appDir=%2FUsers%2Fbikramsutar%2FDesktop%2Fworkspace%2Fhackathon%2Fbackend%2Fservers%2Fsuno-ai-api%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fbikramsutar%2FDesktop%2Fworkspace%2Fhackathon%2Fbackend%2Fservers%2Fsuno-ai-api&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();